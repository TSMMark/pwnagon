<%= form_for(@deck) do |f| %>
  <%= f.hidden_field :hero_id %>

  <div class="container parallax-overlap">
    <div class="large-vertical-margin">
      <% if @deck.errors.any? %>
        <div id="error_explanation">
          <h4><%= pluralize(@deck.errors.count, "error") %> prohibited this deck from being saved:</h4>

          <ul>
          <% @deck.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
          </ul>
        </div>
      <% end %>

      <div class="card card-transparent">
        <div class="card-content">
          <div class="parallax-overlap-inputs">
            <div class="input-field">
              <%= f.text_field(:name,
                placeholder: "Name your #{@deck.hero.name} deck",
                autofocus: true,
                autocomplete: :off,
                :"data-no-submit" => true) %>
              <%= f.label(:name) %>
            </div>

            <div class="input-field">
              <%= f.text_area(:description, class: "materialize-textarea") %>
              <%= f.label(:description) %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="container">
    <%= react_component("Controllers.DeckEditor",
          # TODO: remove this if unused.
          name: @deck.name,

          # TODO: Show only cards avail to current hero.
          # TODO: Pagination or AJAX or something?
          cards: prepare_cards_for_deck_editor(Card.all),
          selectedCardsIds: @deck.slots.map(&:card_id),
          cancelURL: @deck.persisted? ? deck_path(@deck) : decks_path) %>
  </div>
<% end %>
